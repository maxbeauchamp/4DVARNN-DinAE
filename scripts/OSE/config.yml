# path files
path_files:
#   OI file 
    fileOI: "/training/ssh_alg_h2g_j2g_j2n_j3_s3a_duacs.nc"
#   Obs file 
    fileObs: "/training/dataset_nadir_0d.nc"
#   Model file
    fileMod: "/ref/NATL60-CJM165_GULFSTREAM_ssh_y2013.1y.nc"
#   OI file 
    fileOI_Mod: "/oi/ssh_NATL60_4nadir.nc"

# data options
data_options:
    lag: 0
    domain: GULFSTREAM
#   load OI: work on SSH or anomaly w.r.t OI (SSH-OI)
    flagloadOIData: 0
#   use additional covariates in initial layer
    include_covariates: True
    lfile_cov:
    - "/training/ssh_alg_h2g_j2g_j2n_j3_s3a_duacs.nc"
    lname_cov:
    - ssh
    lid_cov:
    - OI
    lfile_cov_mod:
    - "/oi/ssh_NATL60_4nadir.nc"
    lname_cov_mod:
    - ssh_mod
    lid_cov_mod:
    - OI
#   Length of the 4th dimension 
    size_tw: 11
#   Dowscaling parameter
    dwscale: 2
#   half-width of holes
    Wsquare: 4 
#   number of holes
    Nsquare: 3  
    sigNoise: 1e-1
    flagTrOuputWOMissingData: 1
    stdMask: 0.
    dropout: 0.0
    wl2: 0.0000

# NN model options
NN_options:
#   Dimension of the latent space
    DimAE: 40    
#   model type, 1: ConvAE or 2: GENN 3: PINN
    flagAEType: 2     
#   multiscale model
    flag_MultiScaleAEModel: 0 
# load model from NATL60 or not
    load_model: False
# add regularization in loss function or not 
    with_regul: False


# loss function weighting
loss_weighting: 
    alpha: !1darray
      - - 1.
        - 0.1
    alpha4DVar: !1darray
      - - 0.5
        - 0.5
    regul: !1darray
      - - 1.
        - 0.1

# solver parameters
solver_options: 
#   Gradient computation 
#   0: subgradient
#   1: true gradient/autograd
    flagGradModel: 1  
#   Optimization method 
#   0: fixed-step gradient descent
#   1: ConvNet_step gradient descent
#   2: LSTM-based descent
    flagOptimMethod: 1     

# training parameters
training_params:
#   load pre-defined AE model or not   
    flagLoadModel: 0
# batch size for a single GPU  
    batch_size: 4
    NbEpoc: 20
    Niter: 20

